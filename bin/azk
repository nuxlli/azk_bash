#!/bin/bash

# TODO: Test azk is compiled (make?)
# TODO: If linux with docker don't use agent
# TODO: i18n in msgs (LC_ALL, LANG)

 __FILE__="${0}"
_AZK_PATH=${_AZK_PATH:-`cd \`dirname $(readlink ${__FILE__} || echo ${__FILE__} )\`/..; pwd`}

# Default values
      AZK_APPS_PATH="${AZK_APPS_PATH:-~/Work}"
     AZK_AGENT_HOST="${AZK_AGENT_HOST:-azk-agent}"
AZK_AGENT_APPS_PATH="${AZK_AGENT_APPS_PATH:-/azk/apps}"

dir_resolve () {
  cd "$1" 2>/dev/null || return $?
  echo "`pwd -P`"
}

escape_path () {
  echo $(echo $@ | sed 's/\//\\\//g')
}

# Show azk version
show_version () {
  echo "Azk $(grep 'version:' $_AZK_PATH/mix.exs | awk '{print $2}' | tr -d \",)"
}

# Check azkagent is avable
check_agent () {
  if ! $(ping -t 1 -c 1 $AZK_AGENT_HOST 2>/dev/null >/dev/null); then
    echo "Not found azk-agent in $AZK_AGENT_HOST" >&2
    return 68
  fi
}

resolve_app_agent_dir () {
  local base=${AZK_AGENT_APPS_PATH}

  # Valid subdirectory
  local path="$(pwd | sed 's/'"$(escape_path $AZK_APPS_PATH)"'//g')"
  [ "$path" != "$(pwd)" ] && echo $base$path && return 0

  # Not valid app path
  echo "Not in azk application path" >&2
  return 1
}

# TODO: Get dynamically azk path in agent
run_command () {
  app_path=$(resolve_app_agent_dir)
  if [ $? -eq 0 ]; then
    ssh $AZK_AGENT_HOST "cd $app_path; /vagrant/bin/azk.exs ${@}"
  else
    exit $?
  fi
}

azk_main () {
  case ${1} in
    -v | --version)
      show_version
      ;;
    *)
      check_agent && run_command "${@}"
  esac
}

# sourced or run
if [ ! $# -ne 1 ]; then
  azk_main "${@}"
fi
