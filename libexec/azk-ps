#!/usr/bin/env bash
#
# Summary: Displays a information about all of application process
#
# Usage: azk ps

set -e
[ -n "$AZK_DEBUG" ] && set -x

# Provide azk completions
if [ "$1" = "--complete" ]; then
  exit
fi

# Save --final flag
if [ "$1" = "--final" ]; then
  final=true; shift
fi

# requires azkfile
azkfile=`azk-azkfile`

# run only is --final flag
if [ -z "$final" ]; then
  exec azk-agent-exec ps "$@"
fi

# Tools
source "$(azk-root)/private/bin/common.sh"

metrics_memory() {
  cat "/sys/fs/cgroup/memory/lxc/${1}/memory.max_usage_in_bytes"
}

query='map("\($s)\(.Id)\($s) \($s)\(.Command)\($s) \($s)\(.Status)\($s)") | @sh'
eval "processes=($(azk.docker_containers | jq -r --arg s "\\'" $query))"

# Output format
id_f="$(azk.escape "%{blue}%-13s%{reset}")"
me_f="$(azk.escape "%{yellow}%-8s%{reset}")"
up_f="$(azk.escape "%{cyan}%-14.14s%{reset}")"
cm_f="$(azk.escape "%{green}%s%{reset}")"
awk_format="$(printf \
  '{ printf "%s %s %s %s \\n", $1, $2, $3, $4}' \
  $id_f $me_f $up_f $cm_f \
)"

# Label
echo "Azk id**Memory**Up time**Command" | awk -F '**' "$awk_format"
echo "---"

# Processes
for i in "${processes[@]}"; do
  eval "process=($(echo "$i"))"
  id="${process[0]}"
  command="${process[1]}"
  status="${process[2]}"

  memory=$(( $(metrics_memory $id) / 1024 ))
  short_pid="$(printf "%.12s " "$id")"

  echo "$short_pid**${memory}K**$status**$command" | \
    awk -F '**' "$awk_format"
done
