#!/usr/bin/env azk-interpreter
#
# Summary: Run an command it has as dependence the agent
#
# Usage: azk agent-exec <azk-command> [arg1 arg2...]

# Provide azk completions
if [ "$1" = "--complete" ]; then
  exec azk-commands
fi

# Is final command?
[ "$1" == "--final" ] && { final=true; shift; }

# Require options
[ -z "$1" ] && { show_usage $azk_command; }

check_agent() {
  local SAVE_AZK_INTERACTIVE="${AZK_INTERACTIVE}"
  export AZK_INTERACTIVE=
  if [ $(azk-agent-ssh "${1}" "echo 1" &>/dev/null; echo $?) -eq 0 ]; then
    export AZK_INTERACTIVE="$SAVE_AZK_INTERACTIVE"
    return 0;
  fi
  export AZK_INTERACTIVE="$SAVE_AZK_INTERACTIVE"
  return 1
}

# find docker command
case `type -t docker` in
  file|function|alias)
    command=$1; shift
    azk $command --final $@
    ;;
  *)
    host=`azk.agent_ip`
    if [ ! -z "$final" ] || [ "$(check_agent $host; echo $?)" -eq 1 ]; then
      azk.error "cannot find docker or agent"
      exit 1
    fi

    declare -a vars=(TERM AZK_DEBUG AZK_INTERACTIVE AZK_ENV)
    declare -a envs

    for i in "${vars[@]}"; do
      envs+=("export $i=$(eval "echo \$$i")")
    done

    envs=$(printf ' %s;' "${envs[@]}")

    # Run command in agent
    app_path=`azk.resolve_app_agent_dir`
    command=$1; shift

    azk_path="/home/core/azk/libexec/azk"
    azk-agent-ssh $host "$envs cd $app_path; $azk_path $command --final$(printf ' %q' "$@")"
esac

