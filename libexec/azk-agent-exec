#!/usr/bin/env bash
#
# Summary: Run an command it has as dependence the agent
#
# Usage: azk agent-exec <azk-command> [arg1 arg2...]

set -e
[ -n "$AZK_DEBUG" ] && set -x

# Provide azk completions
if [ "$1" = "--complete" ]; then
  exec azk-commands
fi

if [ "$1" = "--final" ]; then
  final=true; shift
fi

azk_command="$1"

if [ -z "$azk_command" ]; then
  azk-help --usage agent-exec >&2
  exit 1
fi

check_agent() {
  [ $(azk-agent-ssh "${1}" "echo 1" &>/dev/null; echo $?) -eq 0 ] && return 0
  return 1
}

escape_path () {
  echo $(echo $@ | sed 's/\//\\\//g')
}

resolve_app_agent_dir () {
  local base="${AZK_AGENT_APPS_PATH:-/home/core/azk/data/apps}"

  # Valid subdirectory
  local path="$(pwd | sed 's/'"$(escape_path $AZK_APPS_PATH)"'//g')"
  [[ "$path" != "$(pwd)" ]] && echo $base$path && return 0

  # Not valid app path
  azk.error "not in azk applications path"
  return 1
}

# Tools
source "$(azk-root)/private/bin/common.sh"

# find docker command
case `type -t docker` in
  file|function|alias)
    command=$1; shift
    azk $command --final $@
    ;;
  *)
     host=${AZK_AGENT_HOST:-azk-agent}
    if [ ! -z "$final" ] || [ "$(check_agent $host; echo $?)" -eq 1 ]; then
      azk.error "cannot find docker or agent"
      exit 1
    fi

    # Run command in agent
    app_path=`resolve_app_agent_dir`
    command=$1; shift
    azk-agent-ssh $host "export TERM=$TERM; export AZK_DEBUG=$AZK_DEBUG; cd $app_path; /home/core/azk/libexec/azk $command --final$(printf ' %q' "$@")"
esac

