#!/usr/bin/env bash
#
# Summary: Bind of jq
#
# Usage: azk json [arg1..arg2]

set -e
[ -n "$AZK_DEBUG" ] && set -x

OS=Unknown
ARCH=Unknown

# Find ARCH by machine
case `uname -m` in
  x86_64) ARCH=x64;;
  i686|i386) ARCH=x86;;
esac

# Find OS by kernel name
case `uname -s` in
  Linux)
    OS=linux
    OSARCH="$OS/jq_$ARCH"
    ;;
  Darwin)
    OS=osx
    OSARCH="jq_$OS" # universal
    ;;
  *)
    echo "azk-json: SO or architecture is not supported" >&2
    exit 1;
esac

declare -a options

while :; do
  # Clear?
  if [ "$1" == "-c" ]; then
    clear=true;
    shift
  elif echo "$1" | grep -q '\-[[:alpha:]]$'; then
    options+=("$1")
    shift
  elif [ "$1" = "--arg" ]; then
    options+=("$1 $2 $3")
    shift 3
  elif echo "$1" | grep -q '\-\-[[:alpha:]|\-]*$'; then
    options+=("$1")
    shift
  else
    break
  fi
done

options="$(printf " %s" "${options[@]}")"
private="$(azk root)/private"
command="${private}/lib/jq/${OSARCH}${options} '${@}'"

# Check is a pipe or terminal
# TODO: If last parameter is a file should not use remccoms3
if [ -z "$1" -o "$1" == "--version" -o -z "$clear" ]; then
  eval "exec $command"
else
  eval "exec \"${private}/bin/remccoms3\" | $command"
fi
